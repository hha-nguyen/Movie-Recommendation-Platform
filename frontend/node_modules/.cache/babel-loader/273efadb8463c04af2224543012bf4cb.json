{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mesto/Projects/clonenetflix/react-frontend/src/components/DetailContent.js\";\nimport React, { Component } from \"react\";\nimport { Modal } from \"reactstrap\";\nimport MovieApiService from \"../apis/MovieApiService\";\nimport FavoriteMovieApiService from \"../apis/FavoriteMovieApiService\";\nimport CommentApiService from \"../apis/CommentApiService\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport Comments from \"./Comments\";\nimport jwt from 'jsonwebtoken';\n\nclass DetailContentCompoent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleOverview = () => {\n      this.setState({\n        overviewExpanded: !this.state.overviewExpanded\n      });\n    };\n\n    this.handleMovieSave = async () => {\n      var temp = {\n        movieId: this.state.id,\n        movie_original_title: this.props.movie.original_title,\n        poster_path: this.props.movie.poster_path,\n        userId: window.sessionStorage.getItem(\"user\") //user_email : JSON.parse(window.sessionStorage.getItem(\"user\")).userEmail,\n\n      }; // Save only when there is a user session value (login)\n\n      if (sessionStorage.getItem('user') != null) {\n        await FavoriteMovieApiService.addMovie(temp).then(res => {\n          //// Determining whether the movie is on my wish list or not.\n          if (res.data === 'success') {\n            console.info('save success', this.props.databaseid);\n            alert(\"I wished\");\n            this.setState({\n              modal: false\n            });\n          } else {\n            alert(\"It's already on your wishlist.\");\n            this.setState({\n              modal: false\n            });\n          }\n        }).catch(err => {\n          console.error('ApiService.addMovies Error', err);\n          alert('Wish list save error\\nPlease contact the administrator');\n        }); ////If you are not logged in, move to the login screen when you click the wish button\n      } else {\n        alert('It is available after login.');\n        window.location.href = \"http://localhost:3000/login\";\n      }\n    };\n\n    this.handleMovieDelete = async () => {\n      await FavoriteMovieApiService.removeMovie2(this.state.id).then(res => {\n        console.info('deletion success', res.state);\n        console.log(res.data);\n\n        if (res.data === 'success') {\n          alert(\"Deleted.\"); //When deleting from the My Favorites page\n\n          if (document.location.href === \"http://localhost:3000/myContent\") {\n            this.props.loadFavoriteMovie();\n            this.setState({\n              modal: false\n            });\n          } else {\n            //When deleting from another screen\n            this.setState({\n              modal: false\n            });\n          }\n        } else {\n          // When you click the delete button on the unlisted list\n          alert('Its not on my wish list.');\n          return;\n        }\n      }).catch(err => {\n        console.error('ApiService.removeMovie Error', err);\n        alert('Wish list deletion error\\nPlease contact the administrator');\n      });\n    };\n\n    this.getAllInfo = () => {\n      this.getMovieDetails(); // this.getMovieCredits();\n\n      this.getCommentListByMovie();\n    };\n\n    this.getMovieDetails = async () => {\n      let res = await MovieApiService.getMovieDetails(this.state.id);\n      let genres = res.data.genres.map(item => {\n        return item.name;\n      });\n      this.setState({\n        details: res.data,\n        genres: genres\n      }, () => {\n        console.log(\"Details value when clicked!\", this.state.details);\n        console.log(\"this.state.poster_image : \", this.state.poster_image); // console.log('Genre value when pressed!', this.state.genres);\n      });\n    };\n\n    this.getCommentListByMovie = async () => {\n      let res = await CommentApiService.getCommentListByMovie(this.state.id);\n      let commentList = res.data;\n      this.setState({\n        comments: commentList\n      }, () => {\n        console.log(\"Comment information!!!!\");\n        console.log(this.state.comments);\n      });\n    };\n\n    this.seperactor = Array => {\n      var seperactor = \",\";\n      var tempString = \"\";\n\n      for (var i = 0; i < Array.length; i++) {\n        if (i < Array.length - 1) {\n          tempString += Array[i] + seperactor;\n        } else if (i === Array.length - 1) {\n          tempString += Array[i];\n        }\n      }\n\n      return tempString;\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleText = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.writeMovieComment = () => {\n      // get user from jwt\n      const userId = localStorage.getItem(\"userId\");\n      console.log(\"userId: \", userId); //Check the session value to see if you are logged in\n\n      if (userId == null) {\n        alert(\"Login is required\"); //Send to login page\n\n        window.location.href = \"http://localhost:3000/login\";\n      }\n\n      let content = this.state.content;\n      console.log(\"content: \", content);\n      console.log(\"movieId: \", this.state.id);\n      const comment = {\n        content: content,\n        userId: userId,\n        movieId: this.state.id\n      }; //object creation\n\n      CommentApiService.writeMovieComment(comment).then(res => {\n        console.log(\"Write comment reponse:\", res.data);\n        let result = res.data;\n\n        if (result != null) {\n          alert(\"Completion of comment\");\n          this.getCommentListByMovie(); //Reset your comments\n\n          this.setState({\n            content: \"\"\n          });\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.deleteComment = (id, userId) => {\n      // console.log(typeof this.props.userId); //number\n      // console.log(typeof sessionStorage.getItem(\"user\")); //string\n      console.log(id); //ID value of the comment!\n\n      console.log(userId); //If the logged in user and the commenter are the same person, it can be deleted\n\n      if (sessionStorage.getItem(\"user\") === userId.toString()) {\n        CommentApiService.deleteComment(id).then(res => {\n          console.log(res.data); //deletion success\n\n          if (res.status === 200) {\n            alert(\"Comment has been deleted\"); //Reload the comment list after deletion\n\n            this.getCommentListByMovie();\n          }\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.state = {\n      userId: this.props.userId,\n      id: this.props.id,\n      movie: this.props.movie,\n      modal: false,\n      //Default modal value false\n      details: {},\n      genres: [],\n      //// Show the poster image as it is\n      poster_image: \"http://d37j0hhum58wlu.cloudfront.net\" + this.props.movie.posterPath,\n      content: \"\",\n      //comment\n      overviewExpanded: false // Track if the overview is expanded\n\n    };\n  } // Method to toggle the overview expansion\n\n\n  render() {\n    // Limit the overview to 100 characters\n    const overview = this.state.details.overview || \"No plot summary\";\n    const truncatedOverview = this.state.overviewExpanded ? overview : overview.slice(0, 100) + \"...\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn bg-transparent\",\n        onClick: this.toggle,\n        children: this.state.poster_image === \"http://image.tmdb.org/t/p/w500null\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: \"https://i.ytimg.com/vi/GV3HUDMQ-F8/maxresdefault.jpg\",\n          height: \"270\",\n          width: \"180\",\n          style: {\n            margin: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.poster_image,\n          width: \"180px\",\n          alt: \"new\",\n          style: {\n            borderRadius: 5\n          },\n          onClick: this.getAllInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        size: \"lg\",\n        className: \"my-modal\",\n        style: {\n          maxWidth: \"900px\",\n          width: \"80%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: this.toggle,\n              style: {\n                paddingRight: \"10px\",\n                margin: \"5px\",\n                textDecoration: \"none\",\n                color: \"#777777\",\n                fontWeight: \"bold\",\n                fontSize: \"x-large\",\n                flex: \"1\",\n                textAlign: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Icon.XCircleFill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vedio\",\n                children: [this.state.key ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n                  title: \"Youtube Video Player\",\n                  className: \"video\",\n                  allowFullScreen: true,\n                  frameBorder: \"0\",\n                  style: {\n                    width: \"100%\",\n                    height: \"50vh\",\n                    margin: 0,\n                    padding: 0\n                  },\n                  allow: \"autoplay\",\n                  src: this.state.key\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this) : \"There is no Youtube video\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: this.state.details && this.state.details.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      flexDirection: \"row\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"btn btn-light btn-lg\",\n                      type: \"button\",\n                      value: \"\\u25B6 play\",\n                      style: {\n                        margin: 5\n                      },\n                      onClick: () => window.open(`${this.state.key}`, \"_blank\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"btn btn-light btn-lg\",\n                      type: \"button\",\n                      value: \"\\u2764\",\n                      style: {\n                        margin: 5,\n                        borderRadius: 20\n                      },\n                      onClick: () => this.handleMovieSave()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 23\n                    }, this), sessionStorage.getItem(\"user\") != null ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"btn btn-light btn-lg\",\n                      type: \"button\",\n                      value: \"\\u274C \",\n                      style: {\n                        margin: 5,\n                        borderRadius: 20\n                      },\n                      onClick: () => this.handleMovieDelete(this.state.id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 25\n                    }, this) : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            style: {\n              paddingLeft: \"24px\",\n              marginTop: 15\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-8\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content1\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Release date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"contentFont\",\n                  children: [this.state.details.movieSaveDate && this.state.details.movieSaveDate, \" \", this.state.details.runtime && this.state.details.runtime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"contentFont\",\n                  style: {\n                    marginTop: 15\n                  },\n                  children: this.state.details.overview ? this.state.details.overview : \"No plot summary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    flexDirection: \"row\",\n                    marginBottom: 10\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      textDecoration: \"none\",\n                      color: \"#777777\"\n                    },\n                    children: \"Overview\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailFont\",\n                    children: [truncatedOverview, !this.state.overviewExpanded && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"see-more\",\n                      onClick: this.toggleOverview,\n                      style: {\n                        color: \"blue\",\n                        cursor: \"pointer\"\n                      },\n                      children: \"See more...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    flexDirection: \"row\",\n                    marginBottom: 10\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      textDecoration: \"none\",\n                      color: \"#777777\"\n                    },\n                    children: \"Genres\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detailFont\",\n                    children: this.state.genres && this.seperactor(this.state.genres)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            style: {\n              paddingLeft: \"24px\",\n              marginTop: 20\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"form-inline\",\n                style: {\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  placeholder: \"Please enter a comment\",\n                  className: \"form-control\",\n                  rows: \"2\",\n                  cols: \"100\",\n                  name: \"content\",\n                  value: this.state.content,\n                  onChange: e => this.handleText(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-danger btn-lg\",\n                  style: {\n                    margin: 10\n                  },\n                  onClick: () => this.writeMovieComment(),\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment\",\n                children: this.state.comments ? this.state.comments.map(item => {\n                  return /*#__PURE__*/_jsxDEV(Comments, {\n                    id: item.id,\n                    movieId: item.movieId,\n                    userId: item.userId,\n                    content: item.content,\n                    deleteComment: this.deleteComment\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 27\n                  }, this);\n                }) : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DetailContentCompoent;","map":{"version":3,"sources":["/home/mesto/Projects/clonenetflix/react-frontend/src/components/DetailContent.js"],"names":["React","Component","Modal","MovieApiService","FavoriteMovieApiService","CommentApiService","Icon","Comments","jwt","DetailContentCompoent","constructor","props","toggleOverview","setState","overviewExpanded","state","handleMovieSave","temp","movieId","id","movie_original_title","movie","original_title","poster_path","userId","window","sessionStorage","getItem","addMovie","then","res","data","console","info","databaseid","alert","modal","catch","err","error","location","href","handleMovieDelete","removeMovie2","log","document","loadFavoriteMovie","getAllInfo","getMovieDetails","getCommentListByMovie","genres","map","item","name","details","poster_image","commentList","comments","seperactor","Array","tempString","i","length","toggle","handleText","e","target","value","writeMovieComment","localStorage","content","comment","result","deleteComment","toString","status","posterPath","render","overview","truncatedOverview","slice","margin","borderRadius","maxWidth","width","paddingRight","textDecoration","color","fontWeight","fontSize","flex","textAlign","key","height","padding","title","flexDirection","open","paddingLeft","marginTop","movieSaveDate","runtime","marginBottom","cursor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,uBAAP,MAAoC,iCAApC;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAO,KAAKC,IAAZ,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,MAAMC,qBAAN,SAAoCR,SAApC,CAA8C;AAC5CS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkBnBC,cAlBmB,GAkBF,MAAM;AACrB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,gBAAgB,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAAhC,OAAd;AACD,KApBkB;;AAAA,SAuBpBE,eAvBoB,GAuBF,YAAY;AAC7B,UAAIC,IAAI,GAAG;AACTC,QAAAA,OAAO,EAAG,KAAKH,KAAL,CAAWI,EADZ;AAETC,QAAAA,oBAAoB,EAAG,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,cAF/B;AAGTC,QAAAA,WAAW,EAAG,KAAKZ,KAAL,CAAWU,KAAX,CAAiBE,WAHtB;AAITC,QAAAA,MAAM,EAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,MAA9B,CAJA,CAKT;;AALS,OAAX,CAD6B,CAQ7B;;AACA,UAAGD,cAAc,CAACC,OAAf,CAAuB,MAAvB,KAAkC,IAArC,EAA0C;AACxC,cAAMvB,uBAAuB,CAACwB,QAAxB,CAAiCX,IAAjC,EACHY,IADG,CACEC,GAAG,IAAI;AACX;AACA,cAAIA,GAAG,CAACC,IAAJ,KAAa,SAAjB,EAA4B;AAC1BC,YAAAA,OAAO,CAACC,IAAR,CAAa,cAAb,EAA6B,KAAKtB,KAAL,CAAWuB,UAAxC;AACAC,YAAAA,KAAK,CAAC,UAAD,CAAL;AACA,iBAAKtB,QAAL,CAAc;AACZuB,cAAAA,KAAK,EAAE;AADK,aAAd;AAGD,WAND,MAMO;AACLD,YAAAA,KAAK,CAAC,gCAAD,CAAL;AACA,iBAAKtB,QAAL,CAAc;AACZuB,cAAAA,KAAK,EAAE;AADK,aAAd;AAGD;AACF,SAfG,EAgBHC,KAhBG,CAgBGC,GAAG,IAAI;AACZN,UAAAA,OAAO,CAACO,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACAH,UAAAA,KAAK,CAAC,wDAAD,CAAL;AACD,SAnBG,CAAN,CADwC,CAqBtC;AACH,OAtBD,MAsBO;AACLA,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACAV,QAAAA,MAAM,CAACe,QAAP,CAAgBC,IAAhB,GAAqB,6BAArB;AACD;AACF,KA1DoB;;AAAA,SA6DnBC,iBA7DmB,GA6DC,YAAY;AAE9B,YAAMtC,uBAAuB,CAACuC,YAAxB,CAAqC,KAAK5B,KAAL,CAAWI,EAAhD,EACLU,IADK,CACAC,GAAG,IAAI;AACXE,QAAAA,OAAO,CAACC,IAAR,CAAa,kBAAb,EAAiCH,GAAG,CAACf,KAArC;AACAiB,QAAAA,OAAO,CAACY,GAAR,CAAYd,GAAG,CAACC,IAAhB;;AACA,YAAGD,GAAG,CAACC,IAAJ,KAAa,SAAhB,EAA2B;AACzBI,UAAAA,KAAK,CAAC,UAAD,CAAL,CADyB,CAEzB;;AACA,cAAGU,QAAQ,CAACL,QAAT,CAAkBC,IAAlB,KAA2B,iCAA9B,EAAiE;AAC/D,iBAAK9B,KAAL,CAAWmC,iBAAX;AACA,iBAAKjC,QAAL,CAAc;AACZuB,cAAAA,KAAK,EAAE;AADK,aAAd;AAGD,WALD,MAMK;AAAG;AACN,iBAAKvB,QAAL,CAAc;AACZuB,cAAAA,KAAK,EAAE;AADK,aAAd;AAGD;AACF,SAdD,MAeK;AAAG;AACND,UAAAA,KAAK,CAAC,0BAAD,CAAL;AACA;AACD;AACF,OAvBK,EAwBLE,KAxBK,CAwBCC,GAAG,IAAI;AACZN,QAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACAH,QAAAA,KAAK,CAAC,4DAAD,CAAL;AACD,OA3BK,CAAN;AA4BH,KA3FoB;;AAAA,SA8FnBY,UA9FmB,GA8FN,MAAM;AACjB,WAAKC,eAAL,GADiB,CAEjB;;AACA,WAAKC,qBAAL;AACD,KAlGkB;;AAAA,SAqGnBD,eArGmB,GAqGD,YAAY;AAC5B,UAAIlB,GAAG,GAAG,MAAM3B,eAAe,CAAC6C,eAAhB,CAAgC,KAAKjC,KAAL,CAAWI,EAA3C,CAAhB;AACA,UAAI+B,MAAM,GAAGpB,GAAG,CAACC,IAAJ,CAASmB,MAAT,CAAgBC,GAAhB,CAAqBC,IAAD,IAAU;AACzC,eAAOA,IAAI,CAACC,IAAZ;AACD,OAFY,CAAb;AAGA,WAAKxC,QAAL,CACE;AACEyC,QAAAA,OAAO,EAAExB,GAAG,CAACC,IADf;AAEEmB,QAAAA,MAAM,EAAEA;AAFV,OADF,EAKE,MAAM;AACJlB,QAAAA,OAAO,CAACY,GAAR,CAAY,6BAAZ,EAA2C,KAAK7B,KAAL,CAAWuC,OAAtD;AACAtB,QAAAA,OAAO,CAACY,GAAR,CAAY,4BAAZ,EAA0C,KAAK7B,KAAL,CAAWwC,YAArD,EAFI,CAGJ;AACD,OATH;AAWD,KArHkB;;AAAA,SAwHnBN,qBAxHmB,GAwHK,YAAY;AAClC,UAAInB,GAAG,GAAG,MAAMzB,iBAAiB,CAAC4C,qBAAlB,CAAwC,KAAKlC,KAAL,CAAWI,EAAnD,CAAhB;AACA,UAAIqC,WAAW,GAAG1B,GAAG,CAACC,IAAtB;AACA,WAAKlB,QAAL,CAAc;AAAE4C,QAAAA,QAAQ,EAAED;AAAZ,OAAd,EAAyC,MAAM;AAC7CxB,QAAAA,OAAO,CAACY,GAAR,CAAY,yBAAZ;AACAZ,QAAAA,OAAO,CAACY,GAAR,CAAY,KAAK7B,KAAL,CAAW0C,QAAvB;AACD,OAHD;AAID,KA/HkB;;AAAA,SAiInBC,UAjImB,GAiILC,KAAD,IAAW;AACtB,UAAID,UAAU,GAAG,GAAjB;AACA,UAAIE,UAAU,GAAG,EAAjB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAIA,CAAC,GAAGF,KAAK,CAACG,MAAN,GAAe,CAAvB,EAA0B;AACxBF,UAAAA,UAAU,IAAID,KAAK,CAACE,CAAD,CAAL,GAAWH,UAAzB;AACD,SAFD,MAEO,IAAIG,CAAC,KAAKF,KAAK,CAACG,MAAN,GAAe,CAAzB,EAA4B;AACjCF,UAAAA,UAAU,IAAID,KAAK,CAACE,CAAD,CAAnB;AACD;AACF;;AACD,aAAOD,UAAP;AACD,KA5IkB;;AAAA,SA+InBG,MA/ImB,GA+IV,MAAM;AACb,WAAKlD,QAAL,CAAc;AAAEuB,QAAAA,KAAK,EAAE,CAAC,KAAKrB,KAAL,CAAWqB;AAArB,OAAd;AACD,KAjJkB;;AAAA,SAmJnB4B,UAnJmB,GAmJLC,CAAD,IAAO;AAClB,WAAKpD,QAAL,CAAc;AAAE,SAACoD,CAAC,CAACC,MAAF,CAASb,IAAV,GAAiBY,CAAC,CAACC,MAAF,CAASC;AAA5B,OAAd;AACD,KArJkB;;AAAA,SAuJnBC,iBAvJmB,GAuJC,MAAM;AACxB;AACA,YAAM5C,MAAM,GAAG6C,YAAY,CAAC1C,OAAb,CAAqB,QAArB,CAAf;AACAK,MAAAA,OAAO,CAACY,GAAR,CAAY,UAAZ,EAAwBpB,MAAxB,EAHwB,CAIxB;;AACA,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAClBW,QAAAA,KAAK,CAAC,mBAAD,CAAL,CADkB,CAElB;;AACAV,QAAAA,MAAM,CAACe,QAAP,CAAgBC,IAAhB,GAAuB,6BAAvB;AACD;;AACD,UAAI6B,OAAO,GAAG,KAAKvD,KAAL,CAAWuD,OAAzB;AACAtC,MAAAA,OAAO,CAACY,GAAR,CAAY,WAAZ,EAAyB0B,OAAzB;AACAtC,MAAAA,OAAO,CAACY,GAAR,CAAY,WAAZ,EAAyB,KAAK7B,KAAL,CAAWI,EAApC;AAEA,YAAMoD,OAAO,GAAG;AACdD,QAAAA,OAAO,EAAEA,OADK;AAEd9C,QAAAA,MAAM,EAAEA,MAFM;AAGdN,QAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI;AAHN,OAAhB,CAdwB,CAmBxB;;AACAd,MAAAA,iBAAiB,CAAC+D,iBAAlB,CAAoCG,OAApC,EACG1C,IADH,CACSC,GAAD,IAAS;AACbE,QAAAA,OAAO,CAACY,GAAR,CAAY,wBAAZ,EAAsCd,GAAG,CAACC,IAA1C;AACA,YAAIyC,MAAM,GAAG1C,GAAG,CAACC,IAAjB;;AACA,YAAIyC,MAAM,IAAI,IAAd,EAAoB;AAClBrC,UAAAA,KAAK,CAAC,uBAAD,CAAL;AACA,eAAKc,qBAAL,GAFkB,CAGlB;;AACA,eAAKpC,QAAL,CAAc;AAAEyD,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD;AACF,OAVH,EAWGjC,KAXH,CAWUC,GAAD,IAASN,OAAO,CAACY,GAAR,CAAYN,GAAZ,CAXlB;AAYD,KAvLkB;;AAAA,SAyLnBmC,aAzLmB,GAyLH,CAACtD,EAAD,EAAKK,MAAL,KAAgB;AAC9B;AACA;AACAQ,MAAAA,OAAO,CAACY,GAAR,CAAYzB,EAAZ,EAH8B,CAGb;;AACjBa,MAAAA,OAAO,CAACY,GAAR,CAAYpB,MAAZ,EAJ8B,CAK9B;;AACA,UAAIE,cAAc,CAACC,OAAf,CAAuB,MAAvB,MAAmCH,MAAM,CAACkD,QAAP,EAAvC,EAA0D;AACxDrE,QAAAA,iBAAiB,CAACoE,aAAlB,CAAgCtD,EAAhC,EACGU,IADH,CACSC,GAAD,IAAS;AACbE,UAAAA,OAAO,CAACY,GAAR,CAAYd,GAAG,CAACC,IAAhB,EADa,CACU;;AACvB,cAAID,GAAG,CAAC6C,MAAJ,KAAe,GAAnB,EAAwB;AACtBxC,YAAAA,KAAK,CAAC,0BAAD,CAAL,CADsB,CAEtB;;AACA,iBAAKc,qBAAL;AACD;AACF,SARH,EASGZ,KATH,CASUC,GAAD,IAASN,OAAO,CAACY,GAAR,CAAYN,GAAZ,CATlB;AAUD;AACF,KA3MkB;;AAEjB,SAAKvB,KAAL,GAAa;AACXS,MAAAA,MAAM,EAAE,KAAKb,KAAL,CAAWa,MADR;AAEXL,MAAAA,EAAE,EAAE,KAAKR,KAAL,CAAWQ,EAFJ;AAGXE,MAAAA,KAAK,EAAE,KAAKV,KAAL,CAAWU,KAHP;AAIXe,MAAAA,KAAK,EAAE,KAJI;AAIG;AACdkB,MAAAA,OAAO,EAAE,EALE;AAMXJ,MAAAA,MAAM,EAAE,EANG;AAOX;AACAK,MAAAA,YAAY,EACV,yCAAyC,KAAK5C,KAAL,CAAWU,KAAX,CAAiBuD,UATjD;AAUXN,MAAAA,OAAO,EAAE,EAVE;AAUE;AACbxD,MAAAA,gBAAgB,EAAE,KAXP,CAWc;;AAXd,KAAb;AAaD,GAhB2C,CAkB5C;;;AA2LA+D,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,QAAQ,GAAG,KAAK/D,KAAL,CAAWuC,OAAX,CAAmBwB,QAAnB,IAA+B,iBAAhD;AACA,UAAMC,iBAAiB,GAAG,KAAKhE,KAAL,CAAWD,gBAAX,GACtBgE,QADsB,GAEtBA,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkB,GAAlB,IAAyB,KAF7B;AAIA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,OAAO,EAAE,KAAKjB,MAAlD;AAAA,kBAEG,KAAKhD,KAAL,CAAWwC,YAAX,KAA4B,oCAA5B,gBACC;AACE,UAAA,GAAG,EAAC,EADN;AAEE,UAAA,GAAG,EAAE,sDAFP;AAGE,UAAA,MAAM,EAAC,KAHT;AAIE,UAAA,KAAK,EAAC,KAJR;AAKE,UAAA,KAAK,EAAE;AAAE0B,YAAAA,MAAM,EAAE;AAAV;AALT;AAAA;AAAA;AAAA;AAAA,gBADD,gBASC;AACE,UAAA,GAAG,EAAE,KAAKlE,KAAL,CAAWwC,YADlB;AAEE,UAAA,KAAK,EAAC,OAFR;AAGE,UAAA,GAAG,EAAC,KAHN;AAIE,UAAA,KAAK,EAAE;AAAE2B,YAAAA,YAAY,EAAE;AAAhB,WAJT;AAKE,UAAA,OAAO,EAAE,KAAKnC;AALhB;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,cADF,eAqBE,QAAC,KAAD;AACE,QAAA,MAAM,EAAE,KAAKhC,KAAL,CAAWqB,KADrB;AAEE,QAAA,MAAM,EAAE,KAAK2B,MAFf;AAGE,QAAA,IAAI,EAAC,IAHP;AAIE,QAAA,SAAS,EAAC,UAJZ;AAKE,QAAA,KAAK,EAAE;AAAEoB,UAAAA,QAAQ,EAAE,OAAZ;AAAqBC,UAAAA,KAAK,EAAE;AAA5B,SALT;AAAA,+BAOE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACE;AACE,cAAA,OAAO,EAAE,KAAKrB,MADhB;AAEE,cAAA,KAAK,EAAE;AACLsB,gBAAAA,YAAY,EAAE,MADT;AAELJ,gBAAAA,MAAM,EAAE,KAFH;AAGLK,gBAAAA,cAAc,EAAE,MAHX;AAILC,gBAAAA,KAAK,EAAE,SAJF;AAKLC,gBAAAA,UAAU,EAAE,MALP;AAMLC,gBAAAA,QAAQ,EAAE,SANL;AAOLC,gBAAAA,IAAI,EAAE,GAPD;AAQLC,gBAAAA,SAAS,EAAE;AARN,eAFT;AAAA,qCAaE,QAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAkBE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,OAAf;AAAA,2BACG,KAAK5E,KAAL,CAAW6E,GAAX,gBACC;AACE,kBAAA,KAAK,EAAC,sBADR;AAEE,kBAAA,SAAS,EAAC,OAFZ;AAGE,kBAAA,eAAe,MAHjB;AAIE,kBAAA,WAAW,EAAC,GAJd;AAKE,kBAAA,KAAK,EAAE;AACLR,oBAAAA,KAAK,EAAE,MADF;AAELS,oBAAAA,MAAM,EAAE,MAFH;AAGLZ,oBAAAA,MAAM,EAAE,CAHH;AAILa,oBAAAA,OAAO,EAAE;AAJJ,mBALT;AAWE,kBAAA,KAAK,EAAC,UAXR;AAYE,kBAAA,GAAG,EAAE,KAAK/E,KAAL,CAAW6E;AAZlB;AAAA;AAAA;AAAA;AAAA,wBADD,GAgBC,2BAjBJ,eAoBE;AAAA,0CACE;AAAI,oBAAA,KAAK,EAAE;AAAEL,sBAAAA,KAAK,EAAE;AAAT,qBAAX;AAAA,8BACG,KAAKxE,KAAL,CAAWuC,OAAX,IAAsB,KAAKvC,KAAL,CAAWuC,OAAX,CAAmByC;AAD5C;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAK,oBAAA,KAAK,EAAE;AAAEC,sBAAAA,aAAa,EAAE;AAAjB,qBAAZ;AAAA,4CACE;AACE,sBAAA,SAAS,EAAC,sBADZ;AAEE,sBAAA,IAAI,EAAC,QAFP;AAGE,sBAAA,KAAK,EAAC,aAHR;AAIE,sBAAA,KAAK,EAAE;AAAEf,wBAAAA,MAAM,EAAE;AAAV,uBAJT;AAKE,sBAAA,OAAO,EAAE,MACPxD,MAAM,CAACwE,IAAP,CAAa,GAAE,KAAKlF,KAAL,CAAW6E,GAAI,EAA9B,EAAiC,QAAjC;AANJ;AAAA;AAAA;AAAA;AAAA,4BADF,eAUE;AACI,sBAAA,SAAS,EAAC,sBADd;AAEI,sBAAA,IAAI,EAAC,QAFT;AAGI,sBAAA,KAAK,EAAC,QAHV;AAII,sBAAA,KAAK,EAAE;AAAEX,wBAAAA,MAAM,EAAE,CAAV;AAAaC,wBAAAA,YAAY,EAAE;AAA3B,uBAJX;AAKI,sBAAA,OAAO,EAAE,MAAM,KAAKlE,eAAL;AALnB;AAAA;AAAA;AAAA;AAAA,4BAVF,EAiBGU,cAAc,CAACC,OAAf,CAAuB,MAAvB,KAAkC,IAAlC,gBACC;AACE,sBAAA,SAAS,EAAC,sBADZ;AAEE,sBAAA,IAAI,EAAC,QAFP;AAGE,sBAAA,KAAK,EAAC,SAHR;AAIE,sBAAA,KAAK,EAAE;AAAEsD,wBAAAA,MAAM,EAAE,CAAV;AAAaC,wBAAAA,YAAY,EAAE;AAA3B,uBAJT;AAKE,sBAAA,OAAO,EAAE,MAAM,KAAKxC,iBAAL,CAAuB,KAAK3B,KAAL,CAAWI,EAAlC;AALjB;AAAA;AAAA;AAAA;AAAA,4BADD,GAQE,EAzBL;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAlBF,eA2EE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAqB,YAAA,KAAK,EAAE;AAAE+E,cAAAA,WAAW,EAAE,MAAf;AAAuBC,cAAAA,SAAS,EAAE;AAAlC,aAA5B;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAG,kBAAA,SAAS,EAAC,aAAb;AAAA,6BACG,KAAKpF,KAAL,CAAWuC,OAAX,CAAmB8C,aAAnB,IACC,KAAKrF,KAAL,CAAWuC,OAAX,CAAmB8C,aAFvB,EAEsC,GAFtC,EAGG,KAAKrF,KAAL,CAAWuC,OAAX,CAAmB+C,OAAnB,IAA8B,KAAKtF,KAAL,CAAWuC,OAAX,CAAmB+C,OAHpD;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAOE;AAAG,kBAAA,SAAS,EAAC,aAAb;AAA2B,kBAAA,KAAK,EAAE;AAAEF,oBAAAA,SAAS,EAAE;AAAb,mBAAlC;AAAA,4BACG,KAAKpF,KAAL,CAAWuC,OAAX,CAAmBwB,QAAnB,GACG,KAAK/D,KAAL,CAAWuC,OAAX,CAAmBwB,QADtB,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAgBE;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,wCACE;AAAK,kBAAA,KAAK,EAAE;AAAEkB,oBAAAA,aAAa,EAAE,KAAjB;AAAwBM,oBAAAA,YAAY,EAAE;AAAtC,mBAAZ;AAAA,0CACE;AAAK,oBAAA,KAAK,EAAE;AAAEhB,sBAAAA,cAAc,EAAE,MAAlB;AAA0BC,sBAAAA,KAAK,EAAE;AAAjC,qBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,+BACGR,iBADH,EAEG,CAAC,KAAKhE,KAAL,CAAWD,gBAAZ,iBACC;AACE,sBAAA,SAAS,EAAC,UADZ;AAEE,sBAAA,OAAO,EAAE,KAAKF,cAFhB;AAGE,sBAAA,KAAK,EAAE;AAAE2E,wBAAAA,KAAK,EAAE,MAAT;AAAiBgB,wBAAAA,MAAM,EAAE;AAAzB,uBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAkBE;AAAK,kBAAA,KAAK,EAAE;AAAEP,oBAAAA,aAAa,EAAE,KAAjB;AAAwBM,oBAAAA,YAAY,EAAE;AAAtC,mBAAZ;AAAA,0CACE;AAAK,oBAAA,KAAK,EAAE;AAAEhB,sBAAAA,cAAc,EAAE,MAAlB;AAA0BC,sBAAAA,KAAK,EAAE;AAAjC,qBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,8BACG,KAAKxE,KAAL,CAAWmC,MAAX,IAAqB,KAAKQ,UAAL,CAAgB,KAAK3C,KAAL,CAAWmC,MAA3B;AADxB;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3EF,eAyHE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAqB,YAAA,KAAK,EAAE;AAAEgD,cAAAA,WAAW,EAAE,MAAf;AAAuBC,cAAAA,SAAS,EAAE;AAAlC,aAA5B;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,sCACE;AAAM,gBAAA,SAAS,EAAC,aAAhB;AAA8B,gBAAA,KAAK,EAAE;AAAEf,kBAAAA,KAAK,EAAE;AAAT,iBAArC;AAAA,wCACE;AACE,kBAAA,WAAW,EAAC,wBADd;AAEE,kBAAA,SAAS,EAAC,cAFZ;AAGE,kBAAA,IAAI,EAAC,GAHP;AAIE,kBAAA,IAAI,EAAC,KAJP;AAKE,kBAAA,IAAI,EAAC,SALP;AAME,kBAAA,KAAK,EAAE,KAAKrE,KAAL,CAAWuD,OANpB;AAOE,kBAAA,QAAQ,EAAGL,CAAD,IAAO,KAAKD,UAAL,CAAgBC,CAAhB;AAPnB;AAAA;AAAA;AAAA;AAAA,wBADF,eAUE;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,SAAS,EAAC,uBAFZ;AAGE,kBAAA,KAAK,EAAE;AAAEgB,oBAAAA,MAAM,EAAE;AAAV,mBAHT;AAIE,kBAAA,OAAO,EAAE,MAAM,KAAKb,iBAAL,EAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAoBE;AAAK,gBAAA,SAAS,EAAC,SAAf;AAAA,0BACG,KAAKrD,KAAL,CAAW0C,QAAX,GACG,KAAK1C,KAAL,CAAW0C,QAAX,CAAoBN,GAApB,CAAyBC,IAAD,IAAU;AAChC,sCACE,QAAC,QAAD;AAEE,oBAAA,EAAE,EAAEA,IAAI,CAACjC,EAFX;AAGE,oBAAA,OAAO,EAAEiC,IAAI,CAAClC,OAHhB;AAIE,oBAAA,MAAM,EAAEkC,IAAI,CAAC5B,MAJf;AAKE,oBAAA,OAAO,EAAE4B,IAAI,CAACkB,OALhB;AAME,oBAAA,aAAa,EAAE,KAAKG;AANtB,qBACOrB,IAAI,CAACjC,EADZ;AAAA;AAAA;AAAA;AAAA,0BADF;AAUD,iBAXD,CADH,GAaG;AAdN;AAAA;AAAA;AAAA;AAAA,sBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAzHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiMD;;AArZ2C;;AAwZ9C,eAAeV,qBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal } from \"reactstrap\";\nimport MovieApiService from \"../apis/MovieApiService\";\nimport FavoriteMovieApiService from \"../apis/FavoriteMovieApiService\";\nimport CommentApiService from \"../apis/CommentApiService\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport Comments from \"./Comments\";\nimport jwt from 'jsonwebtoken';\n\nclass DetailContentCompoent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: this.props.userId,\n      id: this.props.id,\n      movie: this.props.movie,\n      modal: false, //Default modal value false\n      details: {},\n      genres: [],\n      //// Show the poster image as it is\n      poster_image:\n        \"http://d37j0hhum58wlu.cloudfront.net\" + this.props.movie.posterPath,\n      content: \"\", //comment\n      overviewExpanded: false, // Track if the overview is expanded\n    };\n  }\n\n  // Method to toggle the overview expansion\n  toggleOverview = () => {\n    this.setState({ overviewExpanded: !this.state.overviewExpanded });\n  };\n\n //Add to wish list\n handleMovieSave = async () => {\n  var temp = {\n    movieId : this.state.id,\n    movie_original_title : this.props.movie.original_title,\n    poster_path : this.props.movie.poster_path,\n    userId : window.sessionStorage.getItem(\"user\"),\n    //user_email : JSON.parse(window.sessionStorage.getItem(\"user\")).userEmail,\n  };\n  // Save only when there is a user session value (login)\n  if(sessionStorage.getItem('user') != null){\n    await FavoriteMovieApiService.addMovie(temp)\n      .then(res => {\n        //// Determining whether the movie is on my wish list or not.\n        if (res.data === 'success') {\n          console.info('save success', this.props.databaseid);\n          alert(\"I wished\");\n          this.setState({\n            modal: false,\n          })\n        } else {\n          alert(\"It's already on your wishlist.\");\n          this.setState({\n            modal: false,\n          })\n        }\n      })\n      .catch(err => {\n        console.error('ApiService.addMovies Error', err);\n        alert('Wish list save error\\nPlease contact the administrator');\n      })\n      ////If you are not logged in, move to the login screen when you click the wish button\n  } else {\n    alert('It is available after login.');\n    window.location.href=\"http://localhost:3000/login\";\n  }\n}\n\n  //delete wish list\n  handleMovieDelete = async () => {\n    \n    await FavoriteMovieApiService.removeMovie2(this.state.id)\n    .then(res => {\n      console.info('deletion success', res.state);\n      console.log(res.data);\n      if(res.data === 'success') {\n        alert(\"Deleted.\");\n        //When deleting from the My Favorites page\n        if(document.location.href === \"http://localhost:3000/myContent\") {\n          this.props.loadFavoriteMovie();\n          this.setState({\n            modal: false,\n          });\n        }\n        else {  //When deleting from another screen\n          this.setState({\n            modal: false,\n          });\n        }\n      }\n      else {  // When you click the delete button on the unlisted list\n        alert('Its not on my wish list.');\n        return;\n      }\n    })\n    .catch(err => {\n      console.error('ApiService.removeMovie Error', err);\n      alert('Wish list deletion error\\nPlease contact the administrator');\n    })\n}\n\n  //A method that calls all necessary data when an image is clicked\n  getAllInfo = () => {\n    this.getMovieDetails();\n    // this.getMovieCredits();\n    this.getCommentListByMovie();\n  };\n\n  //Method to get movie details\n  getMovieDetails = async () => {\n    let res = await MovieApiService.getMovieDetails(this.state.id);\n    let genres = res.data.genres.map((item) => {\n      return item.name;\n    });\n    this.setState(\n      {\n        details: res.data,\n        genres: genres,\n      },\n      () => {\n        console.log(\"Details value when clicked!\", this.state.details);\n        console.log(\"this.state.poster_image : \", this.state.poster_image);\n        // console.log('Genre value when pressed!', this.state.genres);\n      }\n    );\n  };\n\n  //Method to get list of comments\n  getCommentListByMovie = async () => {\n    let res = await CommentApiService.getCommentListByMovie(this.state.id);\n    let commentList = res.data;\n    this.setState({ comments: commentList }, () => {\n      console.log(\"Comment information!!!!\");\n      console.log(this.state.comments);\n    });\n  };\n  //A method that converts the received array into a comma-separated string.\n  seperactor = (Array) => {\n    var seperactor = \",\";\n    var tempString = \"\";\n    for (var i = 0; i < Array.length; i++) {\n      if (i < Array.length - 1) {\n        tempString += Array[i] + seperactor;\n      } else if (i === Array.length - 1) {\n        tempString += Array[i];\n      }\n    }\n    return tempString;\n  };\n\n  //A method that reverses true and false values\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n  //State handler according to content change when commenting\n  handleText = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  //Write a comment\n  writeMovieComment = () => {\n    // get user from jwt\n    const userId = localStorage.getItem(\"userId\");\n    console.log(\"userId: \", userId);\n    //Check the session value to see if you are logged in\n    if (userId == null) {\n      alert(\"Login is required\");\n      //Send to login page\n      window.location.href = \"http://localhost:3000/login\";\n    }\n    let content = this.state.content;\n    console.log(\"content: \", content);\n    console.log(\"movieId: \", this.state.id);\n    \n    const comment = {\n      content: content,\n      userId: userId,\n      movieId: this.state.id,\n    };\n    //object creation\n    CommentApiService.writeMovieComment(comment)\n      .then((res) => {\n        console.log(\"Write comment reponse:\", res.data);\n        let result = res.data;\n        if (result != null) {\n          alert(\"Completion of comment\");\n          this.getCommentListByMovie();\n          //Reset your comments\n          this.setState({ content: \"\" });\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  //Delete comment\n  deleteComment = (id, userId) => {\n    // console.log(typeof this.props.userId); //number\n    // console.log(typeof sessionStorage.getItem(\"user\")); //string\n    console.log(id); //ID value of the comment!\n    console.log(userId);\n    //If the logged in user and the commenter are the same person, it can be deleted\n    if (sessionStorage.getItem(\"user\") === userId.toString()) {\n      CommentApiService.deleteComment(id)\n        .then((res) => {\n          console.log(res.data); //deletion success\n          if (res.status === 200) {\n            alert(\"Comment has been deleted\");\n            //Reload the comment list after deletion\n            this.getCommentListByMovie();\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n  render() {\n    // Limit the overview to 100 characters\n    const overview = this.state.details.overview || \"No plot summary\";\n    const truncatedOverview = this.state.overviewExpanded\n      ? overview\n      : overview.slice(0, 100) + \"...\";\n\n    return (\n      <div>\n        <div className=\"btn bg-transparent\" onClick={this.toggle}>\n          {/* {images} */}\n          {this.state.poster_image === \"http://image.tmdb.org/t/p/w500null\" ? (\n            <img\n              alt=\"\"\n              src={\"https://i.ytimg.com/vi/GV3HUDMQ-F8/maxresdefault.jpg\"}\n              height=\"270\"\n              width=\"180\"\n              style={{ margin: \"5px\" }}\n            />\n          ) : (\n            <img\n              src={this.state.poster_image}\n              width=\"180px\"\n              alt=\"new\"\n              style={{ borderRadius: 5 }}\n              onClick={this.getAllInfo}\n            />\n          )}\n        </div>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          size=\"lg\"\n          className=\"my-modal\"\n          style={{ maxWidth: \"900px\", width: \"80%\" }}\n        >\n          <div className=\"container\">\n            <div className=\"row\">\n              <div\n                onClick={this.toggle}\n                style={{\n                  paddingRight: \"10px\",\n                  margin: \"5px\",\n                  textDecoration: \"none\",\n                  color: \"#777777\",\n                  fontWeight: \"bold\",\n                  fontSize: \"x-large\",\n                  flex: \"1\",\n                  textAlign: \"right\",\n                }}\n              >\n                <Icon.XCircleFill />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"vedio\">\n                  {this.state.key ? (\n                    <iframe\n                      title=\"Youtube Video Player\"\n                      className=\"video\"\n                      allowFullScreen\n                      frameBorder=\"0\"\n                      style={{\n                        width: \"100%\",\n                        height: \"50vh\",\n                        margin: 0,\n                        padding: 0,\n                      }}\n                      allow=\"autoplay\"\n                      src={this.state.key}\n                    ></iframe>\n                  ) : (\n                    \"There is no Youtube video\"\n                  )}\n\n                  <div>\n                    <h1 style={{ color: \"white\" }}>\n                      {this.state.details && this.state.details.title}\n                    </h1>\n                    <div style={{ flexDirection: \"row\" }}>\n                      <input\n                        className=\"btn btn-light btn-lg\"\n                        type=\"button\"\n                        value=\"▶ play\"\n                        style={{ margin: 5 }}\n                        onClick={() =>\n                          window.open(`${this.state.key}`, \"_blank\")\n                        }\n                      />\n                      <input\n                          className=\"btn btn-light btn-lg\"\n                          type=\"button\"\n                          value=\"❤\"\n                          style={{ margin: 5, borderRadius: 20 }}\n                          onClick={() => this.handleMovieSave()}\n                        />\n                      {sessionStorage.getItem(\"user\") != null ?\n                        <input\n                          className=\"btn btn-light btn-lg\"\n                          type=\"button\"\n                          value=\"❌ \"\n                          style={{ margin: 5, borderRadius: 20 }}\n                          onClick={() => this.handleMovieDelete(this.state.id)}\n                        />\n                        :''}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\" style={{ paddingLeft: \"24px\", marginTop: 15 }}>\n              <div className=\"col-8\">\n                <div className=\"content1\">\n                  <p>Release date</p>\n                  <p className=\"contentFont\">\n                    {this.state.details.movieSaveDate &&\n                      this.state.details.movieSaveDate}{\" \"}\n                    {this.state.details.runtime && this.state.details.runtime}\n                  </p>\n                  <p className=\"contentFont\" style={{ marginTop: 15 }}>\n                    {this.state.details.overview\n                      ? this.state.details.overview\n                      : \"No plot summary\"}\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-4\">\n                <div className=\"content2\">\n                  <div style={{ flexDirection: \"row\", marginBottom: 10 }}>\n                    <div style={{ textDecoration: \"none\", color: \"#777777\" }}>\n                      Overview\n                    </div>\n                    <div className=\"detailFont\">\n                      {truncatedOverview}\n                      {!this.state.overviewExpanded && (\n                        <span\n                          className=\"see-more\"\n                          onClick={this.toggleOverview}\n                          style={{ color: \"blue\", cursor: \"pointer\" }}\n                        >\n                          See more...\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                  <div style={{ flexDirection: \"row\", marginBottom: 10 }}>\n                    <div style={{ textDecoration: \"none\", color: \"#777777\" }}>\n                      Genres\n                    </div>\n                    <div className=\"detailFont\">\n                      {this.state.genres && this.seperactor(this.state.genres)}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\" style={{ paddingLeft: \"24px\", marginTop: 20 }}>\n              <div className=\"col\">\n                <form className=\"form-inline\" style={{ width: \"100%\" }}>\n                  <textarea\n                    placeholder=\"Please enter a comment\"\n                    className=\"form-control\"\n                    rows=\"2\"\n                    cols=\"100\"\n                    name=\"content\"\n                    value={this.state.content}\n                    onChange={(e) => this.handleText(e)}\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-danger btn-lg\"\n                    style={{ margin: 10 }}\n                    onClick={() => this.writeMovieComment()}\n                  >\n                    Submit\n                  </button>\n                </form>\n                <div className=\"comment\">\n                  {this.state.comments\n                    ? this.state.comments.map((item) => {\n                        return (\n                          <Comments\n                            key={item.id}\n                            id={item.id}\n                            movieId={item.movieId}\n                            userId={item.userId}\n                            content={item.content}\n                            deleteComment={this.deleteComment}\n                          />\n                        );\n                      })\n                    : \"\"}\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default DetailContentCompoent;\n"]},"metadata":{},"sourceType":"module"}